{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,uBACIC,UAAU,aACVC,SAZa,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,MAMlB,UAII,uBACIQ,KAAK,OACLP,UAAU,QACVQ,MAAOV,EACPW,SAtBc,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,UAuBnB,uBAAOR,UAAU,SAASO,KAAK,SAASC,MAAM,e,QC7B7CG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGrC,OACI,sBAAKd,UAAU,yCAAf,UACI,qBAAKe,IAAKD,EAAKE,IAAKH,IACpB,4BAAIA,Q,uBCRHI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,iDACmCM,UAAUF,GAD7C,+DAEAG,MAAMP,GAFN,cAEbQ,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATvB,kBAYZW,GAZY,4CAAH,sDCMPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GAEnBH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKlB,CAACb,IAIGc,EDd2BK,CAAanB,GAAjCU,EAHuB,EAG7BJ,KAAcO,EAHe,EAGfA,QAEtB,OACI,sBAAK/B,UAAU,QAAf,UACI,oBAAIA,UAAU,wDAAd,SAAuEkB,IACtEa,GAAW,mBAAG/B,UAAU,oCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACK4B,EAAOF,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,aEbpC0B,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,KAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAM9B,OACI,sBAAKI,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,4BACA,cAAC,EAAD,CAAaJ,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWb,KAAI,SAACR,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCd7CsB,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0d063862.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form\r\n            className=\"formulario\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                className=\"texto\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input className=\"enviar\" type=\"submit\" value=\"Enviar\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=H4m7K4I6oAC4Nn686IADrl4iU2MTWjYz`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","// import React, { useEffect, useState } from 'react'\r\n\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from '../components/GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            <h3 className=\"contenido_principal animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\" animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => {\r\n                    return <GifGridItem key={img.id} {...img} />\r\n                })}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n\r\n        })\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([''])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"title\">Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => {\r\n                        return <GifGrid key={category} category={category} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}